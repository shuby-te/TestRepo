# 기본적인 명령어
cd		자신의 디렉토리로 이동
cd 경로		해당 경로로 이동
ls		현재 디렉토리의 목록 확인
sleep n		n초 동안 일시정지시킴. n 뒤에 s,m,h,d를 붙이면 그 초,분,시간,일만큼 일시정지	
ps		지금 실행중인 프로세스 목록 확인
cat 파일명	해당 파일의 모든 내용들을 출력
history		지금까지 자신이 친 명령어를 순서대로 출력
!n		history에서 각 명령어 기록에 주어진 번호를 n에다 입력하여 해당 명령어를 실행
!l		알파벳 l로 시작하는 명령어를 실행
su 		현재 계정을 로그아웃하지 않으면서 다른 계정으로 전환
sudo 명령어	현재 계정에서 root 권한을 이용하여 명령어를 실행

# 프로세스 관련 명령어
ps -l		지금 실행중인 프로세스의 구체적인(PRI, NI값 등) 목록 확인
ps -ef		시스템의 모든 프로세스들을 상세하게 보여줌
ps -u 유저명	해당 유저의 프로세스 목록 출력		
ps -aux		얘도 뭔가 많이 출력
pstree		ps 프로세스 목록을 트리형태로(계층적으로) 출력

데몬 프로세스 : CMD 값 중 끝에 d가 붙은 프로세스로, 서비스의 요청에 대한 응답을 위해 오랫동안 실행중인 백그라운드 프로세스이다.

renice NI값 PID값	PID에 해당되는 프로세스의 NI를 주어진 값만큼 바꾸어 우선순위를 변경할 수 있다.
		NI의 범위는 -20~19로, 낮을수록 우선순위 높음
jobs		현재 쉘 프로세스의 자식 백그라운드 프로세스들 목록 확인
top		시스템의 프로세스와 메모리를 5초 간격으로 업데이트하여 화면에 출력
		PID, USER, NI 등의 정보와 CPU 및 메모리 사용량(퍼센트)을 보여준다.

apt-get install 프로그램	해당하는 프로그램을 즉시 설치한다.
apt-get update 프로그램	이미 설치된 프로그램을 업데이트한다.


# vim 관련 명령어
vim testat.sh	리눅스가 제공하는 전통적인 유닉스 에디터인 vim을 실행한다(testat.sh는 생성할 파일명 예시)
insert 버튼	입력 방식을 변경(삽입, 수정)
esc버튼 후 i 또는 r		i는 insert 모드(삽입)로, r은 replace 모드(수정)로 들어감
:wq		w는 write(쓰기)이고, q는 quit(나가기)이다. 즉, 내용들을 저장하고 나간다.

date > /tmp/datestamp	현재 날짜 및 시간 값을 해당 디렉토리에 저장

ls -al testat.sh	
at		지정된 시점에 실행되도록 하는것
sudo at now +1 minute -f ./testat.sh	1분 후에 at에게 뒤의 파일을 실행하도록 함(?)









